name: Build app

on:
  push:
    paths:
      - ".github/workflows/build.yaml"
      - "android/**"
      - "lib/**"
      - "test/**"
      - "web/**"
      - "analysis_options.yaml"
      - "pubspec.yaml"
      - "pubspec.lock"
  pull_request:
    paths:
      - ".github/workflows/build.yaml"
      - "android/**"
      - "lib/**"
      - "test/**"
      - "web/**"
      - "analysis_options.yaml"
      - "pubspec.yaml"
      - "pubspec.lock"

env:
  JAVA_VERSION: "17"
  JAVA_DISTRIBUTION: temurin
  FLUTTER_CHANNEL: stable
  FLUTTER_VERSION: "3.22.2"

permissions:
  contents: read

jobs:
  lint-test:
    name: Lint and test code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      #- name: Install Java
      #  uses: actions/setup-java@v3
      #  with:
      #    distribution: ${{ env.JAVA_DISTRIBUTION }}
      #    java-version: ${{ env.JAVA_VERSION }}

      #- name: Install Flutter
      #  uses: subosito/flutter-action@v2
      #  with:
      #    channel: ${{ env.FLUTTER_CHANNEL }}
      #    cache: "true"

      #- name: Get Flutter dependencies
      #  run: flutter pub get

      #- name: Analyze code
      #  run: flutter analyze

      # - name: Check formatting
      #  run: dart format --set-exit-if-changed --output none --line-length=100 lib/

      # - name: Run tests
      #  run: flutter test

  build-apk:
    name: Build app for Android
    runs-on: ubuntu-latest
    needs:
      - lint-test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Add environment variables
        run: echo $ENV_DATA >.env

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: "true"

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build release app for Android
        run: flutter config --no-enable-windows-desktop && flutter build apk --no-tree-shake-icons
        #if: startsWith(github.ref, 'refs/tags/v')

      #- name: Build debug app for Android
      #  run: flutter build apk --debug --split-per-abi
      #  if: "!startsWith(github.ref, 'refs/tags/v')"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apks
          if-no-files-found: error
          path: |
            build/app/outputs/flutter-apk/app-*.apk

  build-web:
    name: Build app for web
    runs-on: ubuntu-latest
    needs:
      - lint-test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Add environment variables
        run: echo $ENV_DATA >.env

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build app for web
        run: flutter build web

      # - name: Patch app name for web
      #   run: |
      #     jq -c '.app_name = "Mafia companion"' build/web/version.json >build/web/version.new.json
      #     mv build/web/version{.new,}.json

      - name: Set up Docker CLI
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_PACKAGE_USERNAME }}
          password: ${{ secrets.GH_PACKAGE_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ghcr.io/feliksyasnopolski/mafia-gamemaster:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Upload web artifact
      #   uses: actions/upload-pages-artifact@v2
      #   with:
      #     path: build/web/

  deploy-web:
    name: Deploy app
    runs-on: ubuntu-latest
    needs:
      - build-web
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    #if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade --install mafia-frontend .helm
          kubeconfig: '${{ secrets.KUBECONFIG }}'


  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs:
      - build-apk
    permissions:
      contents: write
    # if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: android-apks
          path: build
      - name: Upload to the backend
        env: # Or as an environment variable
          APP_UPLOAD_TOKEN: ${{ secrets.app_upload_token }}
        run: curl -X POST -F "token=$APP_UPLOAD_TOKEN" -F "app=@build/app-release.apk" https://mafiaarena.org/upload_app